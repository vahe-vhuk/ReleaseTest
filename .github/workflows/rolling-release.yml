name: Rolling release (latest assets)

on:
  push:
    paths:
      - "dist/**"              # run when anything under dist/ changes
  workflow_dispatch:           # allow manual runs

concurrency:
  group: rolling-release
  cancel-in-progress: false

jobs:
  publish:
    runs-on: ubuntu-latest
    permissions:
      contents: write          # REQUIRED to create a release and upload assets
    steps:
      - uses: actions/checkout@v4

      # Build a flat _stage/ with unique asset names and generate manifest.json
      - name: Build stage and manifest
        shell: python
        run: |
          import os, json, hashlib, time, pathlib, shutil
          root = pathlib.Path("dist")
          stage = pathlib.Path("_stage"); stage.mkdir(exist_ok=True)
          if not root.exists():
            raise SystemExit("dist/ folder not found or empty")

          files = []
          for p in root.rglob("*"):
            if p.is_file():
              target = str(p.relative_to(root)).replace("\\","/")
              with open(p, "rb") as f:
                sha = hashlib.sha256(f.read()).hexdigest()
              asset_name = target.replace("/", "__")
              shutil.copy2(p, stage / asset_name)
              files.append({
                "asset_name": asset_name,
                "target": target,
                "sha256": sha,
                "size": p.stat().st_size
              })

          manifest = {
            "generated_at": time.strftime("%Y-%m-%dT%H:%M:%SZ", time.gmtime()),
            "files": files
          }
          pathlib.Path("manifest.json").write_text(json.dumps(manifest, indent=2), encoding="utf-8")
          print(f"Prepared {len(files)} asset(s).")

      # Upload/overwrite manifest.json into a release tagged 'rolling'
      - name: Upload manifest.json
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          tag: rolling
          release_name: Rolling
          file: manifest.json
          overwrite: true

      # Upload/overwrite all staged assets
      - name: Upload staged assets
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          tag: rolling
          release_name: Rolling
          file: _stage/*
          file_glob: true
          overwrite: true
